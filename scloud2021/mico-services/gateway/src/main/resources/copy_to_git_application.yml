server:
  port: 80
spring:
  application:
    name: gateway
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    default-property-inclusion: non_null
  cloud:
    # 注册中心配置
    zookeeper:
      connect-string: 127.0.0.1:2181
      discovery:
        enabled: true
    loadbalancer:
      ribbon:
        enabled: true
      retry:
        enabled: on
    gateway:
      enabled: true
      discovery:
        locator:
          enabled: true                            # 是否与服务注册发现组件进行结合，通过 serviceId 转发到具体的服务实例。默认为 false，设为 true 便开启通过服务中心的自动根据 serviceId 创建路由的功能（支持负载均衡）
          lower-case-service-id: true              # 表示将请求路径的服务名配置改成小写  因为服务注册的时候，向注册中心注册时将服务名转成大写的了
      routes:                                      # 自定义 路由
        - id: ms_cust                              # 路由的ID-名称随便起
          uri: lb://service-customer               # 要从注册中心获取的服务，且以负载均衡方式转发， 也就是要跳转的目的地址
          predicates:                              # 断言
            - Path=/cust/mbl/**                    # 路由规则 - 匹配请求
#          filters:
#            - StripPrefix=1                          # 将匹配所有 "/hello/" 开头的请求(除域名外和端口)，将去掉 1位路径即 "/hello" 拼接在 uri 后面得到目标地址进行转发
            #          - PrefixPath=/usr                        # 将在 Path 前加上"/usr", 拼接在 uri 后面得到目标地址进行转发
#            - name: Hystrix                          # 配置处理服务降级 后跳转地址
#              args:
#                name: abcde                          # 名称随便
#                fallbackUri: forward:/request-error/hystrix           # 要跳转的地址
        - id: ms_prd
          uri: lb://service-product
          predicates:
            - Path=/prd/mbl/**
#          filters:
#            - name: FallbackHeaders                 # FallbackHeaders GatewayFilter Factory可以将Hystrix执行的异常信息添加到外部请求的fallbackUriheader上。
#              args:
#                executionExceptionTypeHeaderName: Hystrix-header
        - id: hystrix
          uri: lb://hystrix_watcher
          predicates:
            - Path=/hystrix/**

# 日志配置
logging:
  level:
    org.springframework.cloud.gateway: debug

info:
  app.name: mcloud-service-gateway-cloud
  app.author: vostroi
  build.artifactId: cloud-gateway
  build.groupId: com.vostroi

# 配置 actuator 监控
management:
  endpoint:
    gateway:
      enabled: true                                           # 默认为 true
  endpoints:
    web:
      exposure:
        include: gateway