server.port=10082
spring.application.name=service-product
spring.main.allow-bean-definition-overriding=true

# \u6570\u636E\u6E90\u914D\u7F6E
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/vst_product?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=Asia/Shanghai

# mybatis \u6620\u5C04\u6587\u4EF6
mybatis.mapper-locations=classpath:mapper/mapper.*.xml
# mybatis \u7C7B\u578B\u6240\u6709\u5305
mybatis.type-aliases-package=com.vostroi.api.components.beans
logging.level.org.springboot.demo.mapper=debug

spring.jackson.date-format=yyyy-MM-dd HH:mm:ss

## Eureka config start
# \u4F5C\u4E3Aeureka\u5BA2\u6237\u7AEF \u662F\u5426\u6CE8\u518C\u5230eureka\u670D\u52A1\u7AEF
#eureka.client.register-with-eureka=true
# \u68C0\u7D22\u670D\u52A1
#eureka.client.fetch-registry=true
# eureka server\u7684\u5730\u5740
#eureka.client.service-url.defaultZone=http://eureka-server-03:10053/eureka,http://eureka-server-01:10051/eureka,http://eureka-server-02:10052/eureka
## Eureka config end

## zookeeper config
#spring.cloud.zookeeper.connect-string=127.0.0.1:2181
#spring.cloud.zookeeper.connect-string=127.0.0.1:2190,127.0.0.1:2191,127.0.0.1:2192
#spring.cloud.zookeeper.discovery.enabled=true

## nacos registry config
spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848

## consul config
#spring.cloud.consul.host=127.0.0.1
#spring.cloud.consul.port=8500
#spring.cloud.consul.discovery.hostname=127.0.0.1
#spring.cloud.consul.discovery.service-name=${spring.application.name}

## 开启Hystrix
feign.hystrix.enabled=true
# 全局hystrix超时时间 毫秒（默认是1秒，所以在@HystrixProperty配置了超时时间大于1秒不起作用，猜测应该是取两者最小值），注意上面配置了 feign.client.config.service-product.read-timeout
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=5000

## spring cloud sleuth configs
spring.zipkin.base-url=http://127.0.0.1:9411
spring.sleuth.sampler.probability=1
spring.sleuth.sampler.rate=10


## seata configs
seata.enabled=true
seata.enable-auto-data-source-proxy=true
## 默认是false，使用cglib代理
seata.use-jdk-proxy=true
seata.tx-service-group=my_test_tx_group

seata.registry.type=nacos
seata.registry.nacos.application=seata-server
seata.registry.nacos.server-addr=127.0.0.1:8848
seata.registry.nacos.username=nacos
seata.registry.nacos.password=nacos
seata.registry.nacos.namespace=487b31fd-0e6c-491f-a875-15be2a5dc09e

seata.config.type=nacos
seata.config.nacos.server-addr=127.0.0.1:8848
seata.config.nacos.username=nacos
seata.config.nacos.password=nacos
seata.config.nacos.group=SEATA_GROUP
seata.config.nacos.namespace=487b31fd-0e6c-491f-a875-15be2a5dc09e

seata.service.vgroup-mapping.my_test_tx_group=default
seata.service.disable-global-transaction=false
seata.client.rm.report-success-enable=false